<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlLoginBack.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0HBw0HBwcHBw0HBwcHDQ8IDQcNFREWFhURFRMY
        HSggGBolGxUTITEhJSkrLi4uFx8zOD8tNygtLiv/2wBDAQoKCg0NDQ8NDQ8rGRUZKy0tLTctKy0rKysr
        LTcrLSs3KysrKystKysrKysrLSsrKysrKysrKysrNy0rKysrKy3/wAARCADDAQMDASIAAhEBAxEB/8QA
        GQAAAwEBAQAAAAAAAAAAAAAAAQIDAAQG/8QAGhABAQEBAQEBAAAAAAAAAAAAAAECERIDE//EABgBAQEB
        AQEAAAAAAAAAAAAAAAECAAME/8QAGBEBAQEBAQAAAAAAAAAAAAAAAAERAhL/2gAMAwEAAhEDEQA/APO4
        Xw58L4osMrq+ddPzrkxXR8652LldeHRhy/OujFcrFyr5MTNPKixWhYlqLVPTRnPuIbjq3ENx15TXNqJa
        i+4lqO0qKjYWqWEsdImlFmUBgwIMINBCCzCwCWYBAsFLTFrBPSeldJ6IQ3EdR0aR1CELBNxmCuaviufK
        ua4WL11Yro+dceKvjSLFSu3Gl8aceNL4053lcrszo8rlzpWac7yqVbpbSemuhitDSOlNVLVVIEtpaV0n
        p1iajolU0SukRSgLLgYQYgwlMWFgEhmbodODWpa1CnBpano9Jo4E9Jaiuk9HAnxhZsYuarmoSqZrjinR
        mrY05s1XNTYqOrGls6cmdLZ0ixUdedKTTlzpSaRYuOiaH0jND6Rij2k1QtJacZtVPQ2ktXAWkprSWriK
        FBrQq4BYvR6oGHpOj0wH63SdHqsBuh0vQ6rEmtLaHQtOBrSWtaW04xdUlG0lrABL0QyUp81KU8ri6LZq
        uahmq5opXzVc1DKuUVUi+apKjlSOddJFZR6SClWDaW1qW1mwLSWtaS1UFjWktC6LdLiKa0vSWh6XEqdb
        qfpvSoFet1L0PpUCnW6n6bq4lToWp+g9KB7QtJdFuiD2ltJdFuiDWktC6JdBjdZPrMxZTypSnzXmdsWz
        VcoZquKm1Ui+F8oYXwi1ciuVcp5Vy5Wus5GCzVHpXktT0fSeqZWsJqp60O6lrTpKixtaJdF1pO6dI51S
        6D0jdB6XE1b03pH23pUSt6H0h6H0qBb03pH0HpcSt6C6S9B6VAr6LdJ3RbpQUui3Sd0W6YHui3RLot0G
        P6ZP0wbDynlS6aV5dd8XzVsVz5quKm1UjpxXRhy4roxXLquvMdOFco4qua49V1kUCh0NVGumF1Ud0+6h
        vSpU2E3pDeh3pDe3bly6bWk9bJvaetuscqpdh7Quw9ukRV/Y+3P7b2pLo9j7c3sfZDo9t7c/tvapWX9h
        7Q9t7VKlb2W7S9BdK0K3RbpK6LdNoVui3SfoPTMp6ZP0wZ09PKl00ryu8WzVcVz5quaiqjqxXRjTjxpf
        GnLp15dmNK505MbVm3Gu0dHoutJey62hWm3pz/TTb25/ptfKbQ+m3NvY/Tbn3t35ceqOtpa2TW0tadY4
        2q3ZfaN2HpcRav7b2h6b0pnR7b0h6H0dC3ofSHpvR1lvbekfTejoV9h6S9N06FPQek+h06FPQeidbrax
        +in1m1nb0ek63XmdVZVM6QlNNIqpXVnS2duPOlc7c66Su3Ozz6OPOzT6OdjpOnX+hNfRz36F19E4fSu/
        o5/psm/ohv6LkReh+m0N7De0daduY5XodaTui60S10jnab03onQ6oKdHqYxmP0elZtJ+t0onWwet0GbW
        wet1gVoxut0GbRgsAnWxmZm1sdXW6TrdcTqnoZpLrek066Jo825poZtNhnTqmzfo5fbe0YqdOm/Quvo5
        7st22H0rr6I72TW09aVIm9G1pLWgtJauRFo2l6zLDDGkNIxCQ0hpk0yNVIWQeGmR8jVYXjcP5Hy2nCcb
        h+D5OjE+NxTjcOjE+BxTgcbRhONw/G4dbCcY/GbWxuh0todDlp+t0nQ6BqnofSXW9Jw+lfTekvQehjel
        bst0n6DrY3o90S0OgW1rQEZCwcGQ0yeZOqkLMnmTzJ5lOukicyeZUmRmRq5E5kfKnkeDVYn5binA42th
        ONw/G4WwvA4fjEYTgcOB0YTgcODDCsZi2OW0Oh0vS8mm63S9brDTdDoB0DTdbpesG0esAxjrDIMh85Co
        WZPMnzlTOG1ciecKTCucKTA11kSmDzKswPka6SJzI+VPIcC5CcDh7AoOE4HD0tLFZqFIYK3S2lI9YvQ6
        QLF6PSBYOgwcXQ6wKeMWAWSzMwDCAhmNI0h8wKg5yrnLYyvjIdOYGMLZwbGFs4TrvzCZweYVmDTA11kS
        8t5W8lsZ0kSsLYpYWsydLT0tZiUtPSUgtJTUlKaFpbWtLapI2h0vQ6QfrdJ0YwN0SsQ42Zi8lYWYJZmY
        ARjMGPFMMwXF8OjEBg7cunEXxAZLvyrIPBYOsLSaZmUSp1mLFpazMCUtBiKSk0zKTU6WsxQWlZiBgxmI
        FmYh/9k=
</value>
  </data>
</root>